     __________________________________________________________________

                  ТРЕБОВАНИЯ К ПРОГРАММАМ "ПРАКТИКУМА НА ЭВМ"


1.  Программа должна запрашивать размер матрицы у
    пользователя (запрос на ввод с клавиатуры).

2.  Программа должна запросить способ ввода матрицы: из
    файла или по формуле, имеющейся в программе. Ввод
    матрицы и правой части (если стоит задача решить
    линейную систему) должен быть оформлен в виде
    подпрограммы, находящейся в отдельном файле.

3.  Ввод матрицы и правой части из файла. В файле с заданным
    именем (например, "a.dat") находится матрица и правая
    часть в формате:

      n
      a_{1,1} ... a_{1,n} b_{1}
      a_{2,1} ... a_{2,n} b_{2}
      ...     ... ...     ...
      a_{n,1} ... a_{n,n} b_{n}

    где n - размер матрицы, A=(a_{i,j}) - матрица, b=(b_{i})
    - правая часть. Если стоит задача обратить матрицу или
    найти ее собственные значения, то элементы b_{i}
    отсутствуют.

4.  Вввод матрицы и правой части по формуле. Элемент a_{i,j}
    матрицы A полагается равным

      a_{i,j} = f(i,j)

    где f(i,j) - функция, которая возвращает значение
    (i,j)-го элемента матрицы. Функция f(i,j) выдается
    преподавателем и должна быть оформлена в виде отдельной
    подпрограммы. Правая часть системы полагается равной
    сумме столбцов матрицы A с нечетным номером (т.е. сумме
    1-го, 3-го, 5-го и т.д. столбцов). Если стоит задача
    обратить матрицу или найти ее собственные значения, то
    правая часть не вычисляется.

5.  Решение системы должно быть оформлено в виде
    подпрограммы, находящейся в отдельном файле и получающей
    в качестве аргументов

      а) размерность n матрицы A,
      б) матрицу A,
      в) правую часть b (если стоит задача решить линейную
         систему)
      г) вектор x, в который будет помещено решение системы
         (если стоит задача решить линейную систему) или ее
         собственные значения (если стоит задача найти
         собственные значения), или матрицу X, в которую будет
         помещена обратная матрица, если стоит задача обратить
         матрицу,
      д) точность (если стоит задача найти собственные
         значения),
      е) дополнительные вектора, если алгоритму требуется
         дополнительная память.

    Получать в этой подпрограмме дополнительную информацию
    извне через глобальные переменные, общие блоки,
    включаемые файлы и т.п. запрещается.

6.  Программа должна содержать подпрограмму вывода на экран
    решения системы (обратной матрицы, если стоит задача
    обратить матрицу, или собственных значений, если стоит
    задача найти собственные значения). Эта подпрограмма
    должна выводить на экран решение системы (обратную
    матрицу или, соответственно, собственные значения), если
    размерность n матрицы не больше, чем m, где m -
    параметр этой подпрограммы. В противном случае выводятся
    первые m компонент решения (m-й главный угловой блок
    обратной матрицы, если стоит задача обратить матрицу,
    или первые m собственных значений, если стоит задача
    найти собственные значения).

7.  Программа должна содержать подпрограмму вычисления нормы
    невязки, т.е.

      а) при вычислении решения системы: |Ax-b|,
      б) при вычислении обратной матрицы: |A A^{-1}  -  I|,
      в) при вычислении собственных значений: невязку в первом
         и втором инвариантах матрицы (следе и длине как вектора
         размера n*n)

    и выводить невязку на экран.

8.  Для задачи решения линейной системы в случае
    инициализации матрицы по формуле программа должна
    выводить норму погрешности, т.е. норму разности между
    полученным приближенным решением и точным решением
    (1,0,1,0,1,...).

9.  Программа должна выводить на экран время, затраченное на
    решение системы (обращение матрицы, если стоит задача
    обратить матрицу, или нахождение собственных значений,
    если стоит задача найти собственные значения). Допустимо
    представлять время в миллисекундах, не преобразовывая в
    обычный формат чч.мм.сс:тт.

10. Суммарный объем оперативной памяти, требуемой программе,
    не должен превышать:

      а) при вычислении решения системы: n*n + O(n),
      б) при вычислении обратной матрицы: 2*n*n + O(n),
      в) при вычислении собственных значений: n*n + O(n).

11. Время работы программы не должно превышать n*n*n,

12. Программа должна написана на языках "C" или "FORTRAN".


     __________________________________________________________________
